<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itfactory.solution.Mapper.POSTGRES_MES.SCR001.SCR001004Mapper">

	<select id="ScheduleList" resultType="HashMap" parameterType="HashMap">
	
		select coalesce(x.clm_check_schedule_id,'') clm_check_schedule_id, coalesce(clm_all_day_yn, '') clm_all_day_yn
				, coalesce(x.clm_check_sub_schedule_id ,'') clm_check_sub_schedule_id , coalesce(x.clm_check_emergency_yn,'') clm_check_emergency_yn
				, coalesce(x.clm_start_date,'') clm_start_date, coalesce(x.clm_start_time,'') clm_start_time 
				, coalesce(x.clm_end_date,'') clm_end_date , coalesce(x.clm_end_time,'') clm_end_time , coalesce(x.clm_schedule_color,'') as color
				, coalesce(x.clm_start_date || ' ' || x.clm_start_time ,'') as start , coalesce(x.clm_end_date || ' ' || x.clm_end_time ,'') as end
				, coalesce(x.clm_check_complete_value,'') clm_check_complete_value
				, coalesce(x.clm_check_after_management,'') clm_check_after_management, coalesce(x.clm_comment,'') as name
				, coalesce(y.clm_user_id,'') clm_user_id , coalesce(y.clm_client_name,'') clm_client_name
				, coalesce(u.clm_user_name,'') clm_user_name , coalesce(y.clm_check_interval,'') clm_check_interval
		from tbl_check_sub_schedule_list x
		left outer join tbl_check_schedule_list y on x.clm_check_schedule_id = y.clm_check_schedule_id 
		left outer join tbl_user_info u on y.clm_user_id = u.clm_user_id 
			where coalesce(x.clm_delete_yn,'N') = 'N' and coalesce(y.clm_delete_yn,'N') = 'N'
		order by cast(x.clm_check_schedule_id as integer)
		
	</select>
	
	
	<select id="UserList" resultType="HashMap" parameterType="HashMap">
		select cast(ROW_NUMBER() OVER (ORDER BY clm_user_name asc) as varchar) num
		     , clm_user_id, clm_user_name
		     , coalesce(x.clm_comment,'') clm_comment
		  from tbl_user_info x
		  where 1=1
			<if test='search != null and search != "" '>
			 and (clm_user_id ilike '%' || trim(#{search}) || '%'
			 	or clm_user_name ilike '%' || trim(#{search}) || '%')
			</if>
		 order by clm_user_name asc
	</select>
	
	
	
	<select id="FileList" resultType="HashMap" parameterType="HashMap">
	
		select coalesce(x.clm_check_schedule_id,'') clm_check_schedule_id , coalesce(x.clm_file_location,'') clm_file_location
			, coalesce(x.clm_file_size ,'') clm_file_size , coalesce(x.clm_file_name ,'') clm_file_name
			, coalesce(x.clm_check_schedule_file_id ,'') clm_check_schedule_file_id , coalesce(x.clm_file_comment ,'') clm_file_comment
		from tbl_schedule_file_info x
			left outer join tbl_check_schedule_list y on x.clm_check_schedule_id = y.clm_check_schedule_id 
			where x.clm_delete_yn = 'N' and x.clm_check_schedule_id = #{clm_check_schedule_id} and x.clm_check_sub_schedule_id = #{clm_check_sub_schedule_id}
		order by cast(x.clm_check_schedule_id as integer)
		
	</select>
	
	<select id="SelectMaxSeq" resultType="String">
		SELECT 
			CASE WHEN MAX(clm_check_schedule_id) IS NULL THEN '00000001' ELSE
		      LPAD( CAST(MAX(CAST(SUBSTR(clm_check_schedule_id, 2) AS INTEGER)) + 1 AS VARCHAR),8,'0')
		  END
		FROM tbl_check_schedule_list
	</select>
	
	<select id="SubSelectMaxSeq" resultType="String">
		select   CASE WHEN MAX(clm_check_sub_schedule_id) IS NULL THEN 'S00000001' ELSE 
	      'S' || LPAD( CAST( MAX(CAST(SUBSTR(clm_check_sub_schedule_id, 2) AS INTEGER)) + 1 AS VARCHAR ),8,'0') 
	  END from tbl_check_sub_schedule_list
	</select>
	
	<insert id="Reg" parameterType="HashMap">
		INSERT INTO tbl_check_schedule_list
			(clm_check_schedule_id, clm_user_id, clm_check_interval, clm_client_name, clm_reg_datetime, clm_reg_user, clm_delete_yn)
		VALUES( #{clm_check_schedule_id} , #{clm_user_id}, #{clm_check_interval}, #{clm_client_name}
			, to_char(now(), 'YYYYMMDDHH24MISSMS'::text)::character varying, '', 'N'::character varying)
			
	</insert>
	
	<insert id="SubReg" parameterType="HashMap">
		INSERT INTO tbl_check_sub_schedule_list
			(clm_check_sub_schedule_id, clm_check_schedule_id , clm_check_emergency_yn, clm_start_date, clm_start_time , clm_end_date, clm_end_time 
			, clm_check_complete_value, clm_check_after_management
			,clm_schedule_color , clm_comment, clm_reg_datetime, clm_reg_user, clm_delete_yn)
		VALUES( #{clm_check_sub_schedule_id}, #{clm_check_schedule_id} , #{clm_check_emergency_yn}, #{clm_start_date}, #{clm_start_time}, #{clm_end_date} , #{clm_end_time}, '', ''
			, #{clm_color}, #{clm_comment}, to_char(now(), 'YYYYMMDDHH24MISSMS'::text)::character varying
			, '', 'N'::character varying)
			
	</insert>
	
	<update id="Update" parameterType="HashMap">
		UPDATE tbl_check_schedule_list
		SET clm_user_id= #{clm_user_id}, clm_check_interval= #{clm_check_interval} , clm_client_name = #{clm_client_name} 
		, clm_update_datetime= to_char(now(), 'YYYYMMDDHH24MISSMS'::text)::character varying, clm_update_user=#{clm_user}
		WHERE clm_check_schedule_id= #{clm_check_schedule_id}
	</update>
	
	<update id="SubUpdate" parameterType="HashMap">
	
		UPDATE tbl_check_sub_schedule_list
			SET clm_start_date=#{clm_start_date} , clm_start_time=#{clm_start_time} 
			, clm_end_date=#{clm_end_date} , clm_end_time=#{clm_end_time}
			, clm_comment=#{clm_comment} , clm_schedule_color = #{clm_color}
			, clm_all_day_yn = #{clm_all_day_yn} , clm_check_emergency_yn = #{clm_check_emergency_yn}
			, clm_update_datetime= to_char(now(), 'YYYYMMDDHH24MISSMS'::text)::character varying, clm_update_user=#{clm_user}
		WHERE clm_check_sub_schedule_id= #{clm_check_sub_schedule_id} and clm_check_schedule_id= #{clm_check_schedule_id}
		
	</update>
	
	<update id="Delete" parameterType="HashMap">
		UPDATE tbl_check_schedule_list
		SET clm_delete_yn = 'Y', clm_delete_datetime= to_char(now(), 'YYYYMMDDHH24MISSMS'::text)::character varying, clm_delete_user=#{clm_user}
		WHERE clm_check_schedule_id= #{clm_check_schedule_id}
	</update>
	
	<update id="FileDelete" parameterType="HashMap">
		update tbl_schedule_file_info
		  set clm_delete_yn = 'Y'
		where clm_check_schedule_file_id = #{clm_check_schedule_file_id} and clm_check_schedule_id = #{clm_check_schedule_id} 
	</update>
	
	
	
	<update id="Complete" parameterType="HashMap">
		UPDATE tbl_check_schedule_list
			SET clm_check_after_management = #{clm_check_after_management} 
			, clm_check_complete_value = #{clm_check_complete_value}
			, clm_update_datetime= to_char(now(), 'YYYYMMDDHH24MISSMS'::text)::character varying, clm_update_user=#{clm_user}
		WHERE clm_check_schedule_id= #{clm_check_schedule_id}
	</update>
	
	<insert id="FileUpload" parameterType="HashMap">
	
		insert into tbl_schedule_file_info
			(clm_check_schedule_id, clm_check_sub_schedule_id , clm_check_schedule_file_id , clm_file_location, clm_file_name, clm_file_size
			, clm_file_comment, clm_use_yn, clm_upload_datetime)
		values 
			(#{clm_check_schedule_id}  , #{clm_check_sub_schedule_id}
			, (select case when max(clm_check_schedule_file_id) is null then '0001' else case 
			char_length(cast(max(cast(coalesce(clm_check_schedule_file_id,'0') as numeric))+1 as varchar)) when 1 then '000'
			when 2 then '00' when 3 then '0' when 4 then '' end 
			|| cast(max(cast(coalesce(clm_check_schedule_file_id,'0') as numeric))+1 as varchar) end from tbl_schedule_file_info) , #{clm_file_location}, #{clm_file_name}, #{clm_file_size} , #{clm_file_comment}
			, 'Y'::character varying, to_char(now(), 'YYYYMMDDHHMISSMS'::text)::character varying)
			
	</insert>
	
</mapper>